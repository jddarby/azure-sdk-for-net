// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure;
using Azure.Core;
using Azure.ResourceManager.HybridNetwork.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.HybridNetwork
{
    /// <summary>
    /// A class representing the NetworkFunction data model.
    /// Network function resource response.
    /// </summary>
    public partial class NetworkFunctionData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of NetworkFunctionData. </summary>
        /// <param name="location"> The location. </param>
        public NetworkFunctionData(AzureLocation location) : base(location)
        {
            RoleOverrideValues = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of NetworkFunctionData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="identity"> The managed identity of the network function. </param>
        /// <param name="provisioningState"> The provisioning state of the network function resource. </param>
        /// <param name="publisherName"> The publisher name for the network function. </param>
        /// <param name="publisherScope"> The scope of the publisher. </param>
        /// <param name="networkFunctionDefinitionGroupName"> The network function definition group name for the network function. </param>
        /// <param name="networkFunctionDefinitionVersion"> The network function definition version for the network function. </param>
        /// <param name="networkFunctionDefinitionOfferingLocation"> The location of the network function definition offering. </param>
        /// <param name="nfviType"> The nfvi type for the network function. </param>
        /// <param name="nfviId"> The nfviId for the network function. </param>
        /// <param name="allowSoftwareUpdate"> Indicates if software updates are allowed during deployment. </param>
        /// <param name="deploymentValues"> The JSON-serialized deployment values from the user. </param>
        /// <param name="roleOverrideValues"> The role configuration override values from the user. </param>
        internal NetworkFunctionData(ResourceIdentifier id, string name, ResourceType resourceType, ResourceManager.Models.SystemData systemData, IDictionary<string, string> tags, AzureLocation location, ETag? etag, ManagedServiceIdentity identity, ProvisioningState? provisioningState, string publisherName, PublisherScope? publisherScope, string networkFunctionDefinitionGroupName, string networkFunctionDefinitionVersion, string networkFunctionDefinitionOfferingLocation, NfviType? nfviType, string nfviId, bool? allowSoftwareUpdate, string deploymentValues, IList<string> roleOverrideValues) : base(id, name, resourceType, systemData, tags, location)
        {
            ETag = etag;
            Identity = identity;
            ProvisioningState = provisioningState;
            PublisherName = publisherName;
            PublisherScope = publisherScope;
            NetworkFunctionDefinitionGroupName = networkFunctionDefinitionGroupName;
            NetworkFunctionDefinitionVersion = networkFunctionDefinitionVersion;
            NetworkFunctionDefinitionOfferingLocation = networkFunctionDefinitionOfferingLocation;
            NfviType = nfviType;
            NfviId = nfviId;
            AllowSoftwareUpdate = allowSoftwareUpdate;
            DeploymentValues = deploymentValues;
            RoleOverrideValues = roleOverrideValues;
        }

        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public ETag? ETag { get; set; }
        /// <summary> The managed identity of the network function. </summary>
        public ManagedServiceIdentity Identity { get; set; }
        /// <summary> The provisioning state of the network function resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> The publisher name for the network function. </summary>
        public string PublisherName { get; set; }
        /// <summary> The scope of the publisher. </summary>
        public PublisherScope? PublisherScope { get; set; }
        /// <summary> The network function definition group name for the network function. </summary>
        public string NetworkFunctionDefinitionGroupName { get; set; }
        /// <summary> The network function definition version for the network function. </summary>
        public string NetworkFunctionDefinitionVersion { get; set; }
        /// <summary> The location of the network function definition offering. </summary>
        public string NetworkFunctionDefinitionOfferingLocation { get; set; }
        /// <summary> The nfvi type for the network function. </summary>
        public NfviType? NfviType { get; set; }
        /// <summary> The nfviId for the network function. </summary>
        public string NfviId { get; set; }
        /// <summary> Indicates if software updates are allowed during deployment. </summary>
        public bool? AllowSoftwareUpdate { get; set; }
        /// <summary> The JSON-serialized deployment values from the user. </summary>
        public string DeploymentValues { get; set; }
        /// <summary> The role configuration override values from the user. </summary>
        public IList<string> RoleOverrideValues { get; }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.HybridNetwork;

namespace Azure.ResourceManager.HybridNetwork.Samples
{
    public partial class Sample_NetworkServiceDesignGroupOverviewCollection
    {
        // List network function definition groups under a publisher
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_ListNetworkFunctionDefinitionGroupsUnderAPublisher()
        {
            // Generated from example definition: specification/hybridnetwork/resource-manager/Microsoft.HybridNetwork/stable/2023-09-01/examples/ProxyPublisher/NetworkServiceDesignGroupListByPublisher.json
            // this example is just showing the usage of "ProxyNetworkServiceDesignGroups_ListByPublisher" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProxyPublisherOverviewResource created on azure
            // for more information of creating ProxyPublisherOverviewResource, please refer to the document of ProxyPublisherOverviewResource
            string subscriptionId = "subid";
            string proxyPublisherName = "TestPublisher";
            ResourceIdentifier proxyPublisherOverviewResourceId = ProxyPublisherOverviewResource.CreateResourceIdentifier(subscriptionId, proxyPublisherName);
            ProxyPublisherOverviewResource proxyPublisherOverview = client.GetProxyPublisherOverviewResource(proxyPublisherOverviewResourceId);

            // get the collection of this NetworkServiceDesignGroupOverviewResource
            NetworkServiceDesignGroupOverviewCollection collection = proxyPublisherOverview.GetNetworkServiceDesignGroupOverviews();

            // invoke the operation and iterate over the result
            string publisherScopeName = "public";
            string publisherLocationName = "eastus";
            await foreach (NetworkServiceDesignGroupOverviewResource item in collection.GetAllAsync(publisherScopeName, publisherLocationName))
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                NetworkServiceDesignGroupOverviewData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // Get network service design group overview
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetNetworkServiceDesignGroupOverview()
        {
            // Generated from example definition: specification/hybridnetwork/resource-manager/Microsoft.HybridNetwork/stable/2023-09-01/examples/ProxyPublisher/NetworkServiceDesignGroupOverviewGet.json
            // this example is just showing the usage of "ProxyNetworkServiceDesignGroups_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProxyPublisherOverviewResource created on azure
            // for more information of creating ProxyPublisherOverviewResource, please refer to the document of ProxyPublisherOverviewResource
            string subscriptionId = "subid";
            string proxyPublisherName = "testPublisher";
            ResourceIdentifier proxyPublisherOverviewResourceId = ProxyPublisherOverviewResource.CreateResourceIdentifier(subscriptionId, proxyPublisherName);
            ProxyPublisherOverviewResource proxyPublisherOverview = client.GetProxyPublisherOverviewResource(proxyPublisherOverviewResourceId);

            // get the collection of this NetworkServiceDesignGroupOverviewResource
            NetworkServiceDesignGroupOverviewCollection collection = proxyPublisherOverview.GetNetworkServiceDesignGroupOverviews();

            // invoke the operation
            string networkServiceDesignGroupName = "TestNetworkServiceDesignGroupName";
            string publisherScopeName = "public";
            string publisherLocationName = "eastus";
            NetworkServiceDesignGroupOverviewResource result = await collection.GetAsync(networkServiceDesignGroupName, publisherScopeName, publisherLocationName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            NetworkServiceDesignGroupOverviewData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Get network service design group overview
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_GetNetworkServiceDesignGroupOverview()
        {
            // Generated from example definition: specification/hybridnetwork/resource-manager/Microsoft.HybridNetwork/stable/2023-09-01/examples/ProxyPublisher/NetworkServiceDesignGroupOverviewGet.json
            // this example is just showing the usage of "ProxyNetworkServiceDesignGroups_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProxyPublisherOverviewResource created on azure
            // for more information of creating ProxyPublisherOverviewResource, please refer to the document of ProxyPublisherOverviewResource
            string subscriptionId = "subid";
            string proxyPublisherName = "testPublisher";
            ResourceIdentifier proxyPublisherOverviewResourceId = ProxyPublisherOverviewResource.CreateResourceIdentifier(subscriptionId, proxyPublisherName);
            ProxyPublisherOverviewResource proxyPublisherOverview = client.GetProxyPublisherOverviewResource(proxyPublisherOverviewResourceId);

            // get the collection of this NetworkServiceDesignGroupOverviewResource
            NetworkServiceDesignGroupOverviewCollection collection = proxyPublisherOverview.GetNetworkServiceDesignGroupOverviews();

            // invoke the operation
            string networkServiceDesignGroupName = "TestNetworkServiceDesignGroupName";
            string publisherScopeName = "public";
            string publisherLocationName = "eastus";
            bool result = await collection.ExistsAsync(networkServiceDesignGroupName, publisherScopeName, publisherLocationName);

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
